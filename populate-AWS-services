# Create services - these will fail if the service already exists
doorstop add -n AWS SVC
doorstop add -n AWSRDS SVC
doorstop add -n AWSFARGATE SVC
doorstop add -n AWSS3 SVC
doorstop add -n AWSEKS SVC
doorstop add -n AWSALB SVC
doorstop add -n AWSLAMBDA SVC
doorstop add -n AWSAPIGATEWAY SVC
doorstop add -n AWSAVAILABILITYZONE SVC
doorstop add -n AWSREGION SVC
doorstop add -n AWSNEPTUNE SVC
doorstop add -n AWSCOGNITO SVC
doorstop add -n AWSSAGEMAKER SVC
doorstop add -n AWSDYNAMODB SVC
doorstop add -n AWSELASTICACHE SVC
doorstop add -n AWSSECRETSMANAGER SVC
doorstop add -n AWSWAF SVC
doorstop add -n AWSNETWORKFIREWALL SVC
doorstop add -n AWSKMS SVC
doorstop add -n AWSCLOUDWATCH SVC
doorstop add -n AWSCODEBUILD SVC
doorstop add -n AWSCODEPIPELINE SVC
doorstop add -n AWSXRAY SVC
doorstop add -n AWSCLOUDFRONT SVC
doorstop add -n AWSROUTE53 SVC
doorstop add -n AWSVPC SVC
doorstop add -n AWSVPN SVC
doorstop add -n AWSSNS SVC
doorstop add -n AWSKINESIS SVC
doorstop add -n AWSSQS SVC
doorstop add -n AWSSTEPFUNCTIONS SVC
doorstop add -n AWSDIRECTCONNECT SVC

# Populate descriptions
DS_PATH='./items/svcs'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon S3
  ## Object storage built to store and retrieve any amount of data from anywhere
  
  Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance. This means customers of all sizes and industries can use it to store and protect any amount of data for a range of use cases, such as data lakes, websites, mobile applications, backup and restore, archive, enterprise applications, IoT devices, and big data analytics. Amazon S3 provides easy-to-use management features so you can organize your data and configure finely-tuned access controls to meet your specific business, organizational, and compliance requirements. Amazon S3 is designed for 99.999999999% (11 9's) of durability, and stores data for millions of applications for companies all around the world.
  
  <https://aws.amazon.com/s3/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' $DS_PATH/SVC-AWSS3.yml

SVCDESCRIPTION=$(cat <<-END
|
  # Amazon Relational Database Service (RDS)
  ## Set up, operate, and scale a relational database in the cloud with just a few clicks.
  
  Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. It provides cost-efficient and resizable capacity while automating time-consuming administration tasks such as hardware provisioning, database setup, patching and backups. It frees you to focus on your applications so you can give them the fast performance, high availability, security and compatibility they need.
  
  <https://aws.amazon.com/rds/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' $DS_PATH/SVC-AWSRDS.yml

SVCDESCRIPTION=$(cat <<-END
|
  # AWS Fargate
  ## Serverless compute for containers
  
  Deploy and manage your applications, not infrastructure. Fargate removes the operational overhead of scaling, patching, securing, and managing servers.
  
  Monitor your applications via built-in integrations with AWS services like Amazon CloudWatch Container Insights. Gather metrics and logs with third-party tools.
  
  Improve security through workload isolation by design. Amazon ECS tasks and Amazon EKS pods run in their own dedicated runtime environment.
  
  Only pay for what you use. Fargate scales the compute to closely match your specified resource requirements. With Fargate, there is no over-provisioning and paying for additional servers.
  
  <https://aws.amazon.com/fargate/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' $DS_PATH/SVC-AWSFARGATE.yml

SVCDESCRIPTION=$(cat <<-END
|
  # Amazon Elastic Kubernetes Service (EKS)
  ## The most trusted way to start, run, and scale Kubernetes
  
  Explore multiple ways to configure VPC, ALB, EC2 Kubernetes worker nodes, and Amazon EKS.
  Reduce costs with efficient compute resource provisioning and automatic Kubernetes application scaling.
  Ensure a more secure Kubernetes environment with security patches automatically applied to your cluster’s control plane.
  
  <https://aws.amazon.com/eks/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' $DS_PATH/SVC-AWSEKS.yml

SVCDESCRIPTION=$(cat <<-END
|
  # Elastic Load Balancing
  ## Distribute network traffic to improve application scalability
  
  Secure your applications with integrated certificate management, user-authentication, and SSL/TLS decryption.
  Deliver applications with high availability and automatic scaling.
  Monitor the health and performance of your applications in real time, uncover bottlenecks, and maintain SLA compliance.
  
  <https://aws.amazon.com/elasticloadbalancing/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' $DS_PATH/SVC-AWSALB.yml

SVCDESCRIPTION=$(cat <<-END
|
  # AWS Lambda
  ## Run code without thinking about servers or clusters
  
  Run code without provisioning or managing infrastructure. Simply write and upload code as a .zip file or container image.
  Automatically respond to code execution requests at any scale, from a dozen events per day to hundreds of thousands per second.
  Save costs by paying only for the compute time you use—by per-millisecond—instead of provisioning infrastructure upfront for peak capacity.
  Optimize code execution time and performance with the right function memory size. Respond to high demand in double-digit milliseconds with Provisioned Concurrency.
  
  <https://aws.amazon.com/lambda/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' $DS_PATH/SVC-AWSLAMBDA.yml

SVCDESCRIPTION=$(cat <<-END
|
  # Amazon API Gateway
  ## Create, maintain, and secure APIs at any scale
  
  Amazon API Gateway is a fully managed service that makes it easy for developers to create, publish, maintain, monitor, and secure APIs at any scale. APIs act as the "front door" for applications to access data, business logic, or functionality from your backend services. Using API Gateway, you can create RESTful APIs and WebSocket APIs that enable real-time two-way communication applications. API Gateway supports containerized and serverless workloads, as well as web applications.

  API Gateway handles all the tasks involved in accepting and processing up to hundreds of thousands of concurrent API calls, including traffic management, CORS support, authorization and access control, throttling, monitoring, and API version management. API Gateway has no minimum fees or startup costs. You pay for the API calls you receive and the amount of data transferred out and, with the API Gateway tiered pricing model, you can reduce your cost as your API usage scales.
  
  <https://aws.amazon.com/api-gateway/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' $DS_PATH/SVC-AWSAPIGATEWAY.yml

SVCNAME='AWSNEPTUNE'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon Neptune
  ## Build and run graph applications with highly connected datasets
  
  Build and run identity, knowledge, fraud graph, and other applications with performance, and execute more than 100,000 queries per second.
  Deploy high performance graph applications using popular open-source APIs such as Gremlin, openCypher and SPARQL, and easily migrate existing applications.
  Operate graph databases without worrying about hardware provisioning, software patching, setup, configuration, or backups; and pay no upfront licensing costs.
  
  <https://aws.amazon.com/neptune/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSCOGNITO'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon Cognito
  ## Simple and Secure User Sign-Up, Sign-In, and Access Control
  
  Amazon Cognito lets you add user sign-up, sign-in, and access control to your web and mobile apps quickly and easily. Amazon Cognito scales to millions of users and supports sign-in with social identity providers, such as Apple, Facebook, Google, and Amazon, and enterprise identity providers via SAML 2.0 and OpenID Connect.  
  
  <https://aws.amazon.com/cognito/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSSAGEMAKER'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon SageMaker

  Amazon SageMaker helps data scientists and developers to prepare, build, train, and deploy high-quality machine learning (ML) models quickly by bringing together a broad set of capabilities purpose-built for ML.
  
  <https://aws.amazon.com/sagemaker/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSDYNAMODB'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon DynamoDB
  ## Fast, flexible NoSQL database service for single-digit millisecond performance at any scale

  Deliver apps with consistent single-digit millisecond performance, nearly unlimited throughput and storage, and automatic multi-region replication.
  Secure your data with encryption at rest, automatic backup and restore, and guaranteed reliability with an SLA of up to 99.999% availability.
  Focus on innovation and optimize costs with a fully managed serverless database that automatically scales up and down to fit your needs.
  Integrate with AWS services to do more with your data. Use built-in tools to perform analytics, extract insights, and monitor traffic trends.
  
  
  <https://aws.amazon.com/dynamodb/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSELASTICACHE'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon ElastiCache
  ## Unlock microsecond latency and scale with in-memory caching

  Boost application performance, reducing latency to microseconds.
  Scale with just a few clicks to meet the needs of your most demanding, internet-scale applications.
  Reduce costs and eliminate the operational overhead of self-managed caching.
  Build with your choice of Redis or Memcached, two popular open-source caching technologies.
  
  
  <https://aws.amazon.com/elasticache/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSSECRETSMANAGER'
SVCDESCRIPTION=$(cat <<-END
|
  # AWS Secrets Manager Documentation

  AWS Secrets Manager helps you to securely encrypt, store, and retrieve credentials for your databases and other services. Instead of hardcoding credentials in your apps, you can make calls to Secrets Manager to retrieve your credentials whenever needed. Secrets Manager helps you protect access to your IT resources and data by enabling you to rotate and manage access to your secrets.
  
  
  <https://aws.amazon.com/secretsmanager/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSWAF'
SVCDESCRIPTION=$(cat <<-END
|
  # AWS WAF Documentation

  AWS WAF is a web application firewall that lets you monitor web requests that are forwarded to Amazon CloudFront distributions or an Application Load Balancer. You can also use AWS WAF to block or allow requests based on conditions that you specify, such as the IP addresses that requests originate from or values in the requests.
  
  
  <https://aws.amazon.com/waf/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSNETWORKFIREWALL'
SVCDESCRIPTION=$(cat <<-END
|
  # AWS Network Firewall
  ## Deploy network security across your Amazon VPCs with just a few clicks

  AWS Network Firewall is a managed service that makes it easy to deploy essential network protections for all of your Amazon Virtual Private Clouds (VPCs). The service can be setup with just a few clicks and scales automatically with your network traffic, so you don't have to worry about deploying and managing any infrastructure. AWS Network Firewall’s flexible rules engine lets you define firewall rules that give you fine-grained control over network traffic, such as blocking outbound Server Message Block (SMB) requests to prevent the spread of malicious activity. You can also import rules you’ve already written in common open source rule formats as well as enable integrations with managed intelligence feeds sourced by AWS partners. AWS Network Firewall works together with AWS Firewall Manager so you can build policies based on AWS Network Firewall rules and then centrally apply those policies across your VPCs and accounts.

  AWS Network Firewall includes features that provide protections from common network threats. AWS Network Firewall’s stateful firewall can incorporate context from traffic flows, like tracking connections and protocol identification, to enforce policies such as preventing your VPCs from accessing domains using an unauthorized protocol. AWS Network Firewall’s intrusion prevention system (IPS) provides active traffic flow inspection so you can identify and block vulnerability exploits using signature-based detection. AWS Network Firewall also offers web filtering that can stop traffic to known bad URLs and monitor fully qualified domain names.

  It’s easy to get started with AWS Network Firewall by visiting the Amazon VPC Console to create or import your firewall rules, group them into policies, and apply them to the VPCs you want to protect. AWS Network Firewall pricing is based on the number of firewalls deployed and the amount of traffic inspected. There are no upfront commitments and you pay only for what you use.
  
  
  <https://aws.amazon.com/network-firewall/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSKMS'
SVCDESCRIPTION=$(cat <<-END
|
  # AWS Key Management Service (KMS)
  ## Easily create and control the keys used to encrypt or digitally sign your data

  AWS Key Management Service (KMS) makes it easy for you to create and manage cryptographic keys and control their use across a wide range of AWS services and in your applications. AWS KMS is a secure and resilient service that uses hardware security modules that have been validated under FIPS 140-2, or are in the process of being validated, to protect your keys. AWS KMS is integrated with AWS CloudTrail to provide you with logs of all key usage to help meet your regulatory and compliance needs.
  
  
  <https://aws.amazon.com/kms/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml


SVCNAME='AWSCLOUDWATCH'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon CloudWatch
  ## Observability of your AWS resources and applications on AWS and on-premises

  Amazon CloudWatch is a monitoring and observability service built for DevOps engineers, developers, site reliability engineers (SREs), and IT managers. CloudWatch provides you with data and actionable insights to monitor your applications, respond to system-wide performance changes, optimize resource utilization, and get a unified view of operational health. CloudWatch collects monitoring and operational data in the form of logs, metrics, and events, providing you with a unified view of AWS resources, applications, and services that run on AWS and on-premises servers. You can use CloudWatch to detect anomalous behavior in your environments, set alarms, visualize logs and metrics side by side, take automated actions, troubleshoot issues, and discover insights to keep your applications
running smoothly.
  
  <https://aws.amazon.com/cloudwatch/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml


SVCNAME='AWSCODEBUILD'
SVCDESCRIPTION=$(cat <<-END
|
  # AWS CodeBuild
  ## Build and test code with continuous scaling. Pay only for the build time you use.

  AWS CodeBuild is a fully managed continuous integration service that compiles source code, runs tests, and produces software packages that are ready to deploy. With CodeBuild, you don’t need to provision, manage, and scale your own build servers. CodeBuild scales continuously and processes multiple builds concurrently, so your builds are not left waiting in a queue. You can get started quickly by using prepackaged build environments, or you can create custom build environments that use your own build tools. With CodeBuild, you are charged by the minute for the compute resources you use.
  
  <https://aws.amazon.com/codebuild/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSCODEPIPELINE'
SVCDESCRIPTION=$(cat <<-END
|
  # AWS CodePipeline
  ## Automate continuous delivery pipelines for fast and reliable updates

  AWS CodePipeline is a fully managed continuous delivery service that helps you automate your release pipelines for fast and reliable application and infrastructure updates. CodePipeline automates the build, test, and deploy phases of your release process every time there is a code change, based on the release model you define. This enables you to rapidly and reliably deliver features and updates. You can easily integrate AWS CodePipeline with third-party services such as GitHub or with your own custom plugin. With AWS CodePipeline, you only pay for what you use. There are no upfront fees or long-term commitments.
  
  <https://aws.amazon.com/codepipeline/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSXRAY'
SVCDESCRIPTION=$(cat <<-END
|
  # AWS X-Ray
  ## Automate continuous delivery pipelines for fast and reliable updates

  AWS X-Ray helps developers analyze and debug production, distributed applications, such as those built using a microservices architecture. With X-Ray, you can understand how your application and its underlying services are performing to identify and troubleshoot the root cause of performance issues and errors. X-Ray provides an end-to-end view of requests as they travel through your application, and shows a map of your application’s underlying components. You can use X-Ray to analyze both applications in development and in production, from simple three-tier applications to complex microservices applications consisting of thousands of services.
  
  <https://aws.amazon.com/xray/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSCLOUDFRONT'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon CloudFront
  ## Securely deliver content with low latency and high transfer speeds

  Reduce latency by delivering data through 275+ globally dispersed points of presence (PoPs) with automated network mapping and intelligent routing.
  Improve security with traffic encryption and access controls, and use AWS Shield Standard to defend against DDoS attacks at no additional charge.
  Cut costs with consolidated requests, customizable pricing options, and zero fees for data transfer out from AWS origins.
  Customize the code you run at the AWS content delivery network (CDN) edge using serverless compute features to balance cost, performance, and security.
  
  <https://aws.amazon.com/cloudfront/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSROUTE53'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon Route 53
  ## A reliable and cost-effective way to route end users to Internet applications

  Amazon Route 53 is a highly available and scalable cloud Domain Name System (DNS) web service. It is designed to give developers and businesses an extremely reliable and cost effective way to route end users to Internet applications by translating names like www.example.com into the numeric IP addresses like 192.0.2.1 that computers use to connect to each other. Amazon Route 53 is fully compliant with IPv6 as well.

  Amazon Route 53 effectively connects user requests to infrastructure running in AWS – such as Amazon EC2 instances, Elastic Load Balancing load balancers, or Amazon S3 buckets – and can also be used to route users to infrastructure outside of AWS. You can use Amazon Route 53 to configure DNS health checks, then continuously monitor your applications’ ability to recover from failures and control application recovery with Route 53 Application Recovery Controller.

  Amazon Route 53 Traffic Flow makes it easy for you to manage traffic globally through a variety of routing types, including Latency Based Routing, Geo DNS, Geoproximity, and Weighted Round Robin—all of which can be combined with DNS Failover in order to enable a variety of low-latency, fault-tolerant architectures. Using Amazon Route 53 Traffic Flow’s simple visual editor, you can easily manage how your end-users are routed to your application’s endpoints—whether in a single AWS region or distributed around the globe. Amazon Route 53 also offers Domain Name Registration – you can purchase and manage domain names such as example.com and Amazon Route 53 will automatically configure DNS settings for your domains.
  
  <https://aws.amazon.com/route53/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSVPC'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon Virtual Private Cloud (VPC)
  ## Define and launch AWS resources in a logically isolated virtual network

  Secure and monitor connections, screen traffic, and restrict instance access inside your virtual network.
  Spend less time setting up, managing, and validating your virtual network, and concentrate on building the applications that run within it.
  Customize your virtual networking environment by choosing your own IP address range, creating subnets, and configuring route tables.
  
  <https://aws.amazon.com/vpc/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSVPN'
SVCDESCRIPTION=$(cat <<-END
|
  # AWS VPN
  ## Extend your on-premises networks to the cloud and securely access them from anywhere

  AWS Virtual Private Network solutions establish secure connections between your on-premises networks, remote offices, client devices, and the AWS global network. AWS VPN is comprised of two services: AWS Site-to-Site VPN and AWS Client VPN. Each service provides a highly-available, managed, and elastic cloud VPN solution to protect your network traffic.

  AWS Site-to-Site VPN creates encrypted tunnels between your network and your Amazon Virtual Private Clouds or AWS Transit Gateways. For managing remote access, AWS Client VPN connects your users to AWS or on-premises resources using a VPN software client.
  
  <https://aws.amazon.com/vpn/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSSNS'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon Simple Notification Service
  ## Fully managed pub/sub messaging, SMS, email, and mobile push notifications

  Amazon Simple Notification Service (Amazon SNS) is a fully managed messaging service for both application-to-application (A2A) and application-to-person (A2P) communication.

  The A2A pub/sub functionality provides topics for high-throughput, push-based, many-to-many messaging between distributed systems, microservices, and event-driven serverless applications. Using Amazon SNS topics, your publisher systems can fanout messages to a large number of subscriber systems including Amazon SQS queues, AWS Lambda functions and HTTPS endpoints, for parallel processing, and Amazon Kinesis Data Firehose. The A2P functionality enables you to send messages to users at scale via SMS, mobile push, and email.
  
  <https://aws.amazon.com/sns/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSKINESIS'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon Kinesis
  ## Easily collect, process, and analyze video and data streams in real time

  Amazon Kinesis makes it easy to collect, process, and analyze real-time, streaming data so you can get timely insights and react quickly to new information. Amazon Kinesis offers key capabilities to cost-effectively process streaming data at any scale, along with the flexibility to choose the tools that best suit the requirements of your application. With Amazon Kinesis, you can ingest real-time data such as video, audio, application logs, website clickstreams, and IoT telemetry data for machine learning, analytics, and other applications. Amazon Kinesis enables you to process and analyze data as it arrives and respond instantly instead of having to wait until all your data is collected before the processing can begin.
  
  <https://aws.amazon.com/kinesis/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSSQS'
SVCDESCRIPTION=$(cat <<-END
|
  # Amazon Simple Queue Service
  ## Fully managed message queues for microservices, distributed systems, and serverless applications

  Amazon Simple Queue Service (SQS) is a fully managed message queuing service that enables you to decouple and scale microservices, distributed systems, and serverless applications. SQS eliminates the complexity and overhead associated with managing and operating message-oriented middleware, and empowers developers to focus on differentiating work. Using SQS, you can send, store, and receive messages between software components at any volume, without losing messages or requiring other services to be available. Get started with SQS in minutes using the AWS console, Command Line Interface or SDK of your choice, and three simple commands.

  SQS offers two types of message queues. Standard queues offer maximum throughput, best-effort ordering, and at-least-once delivery. SQS FIFO queues are designed to guarantee that messages are processed exactly once, in the exact order that they are sent.
  
  <https://aws.amazon.com/sqs/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSSTEPFUNCTIONS'
SVCDESCRIPTION=$(cat <<-END
|
  # AWS Step Functions
  ## Visual workflows for modern applications

  AWS Step Functions is a low-code visual workflow service used to orchestrate AWS services, automate business processes, and build serverless applications. Workflows manage failures, retries, parallelization, service integrations, and observability so developers can focus on higher-value business logic.
  
  <https://aws.amazon.com/step-functions/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml

SVCNAME='AWSDIRECTCONNECT'
SVCDESCRIPTION=$(cat <<-END
|
  # AWS Direct Connect
  ## Create a dedicated network connection to AWS

  Improve application performance by connecting directly to AWS and bypassing the public internet.
  Secure your data as it moves between your network and AWS with multiple encryption options.
  Reduce your networking costs with low data transfer rates out of AWS.
  
  <https://aws.amazon.com/directconnect/>
END
) \
yq eval -i '.text = env(SVCDESCRIPTION)' ${DS_PATH}/SVC-${SVCNAME}.yml